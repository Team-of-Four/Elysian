{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wanderer/Documents/hack-o-void/elysian/frontend/src/components/UserDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function UserDetails() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [category, setCategory] = useState();\n  const [name, setName] = useState();\n  const ref = /*#__PURE__*/React.createRef();\n  console.log(name);\n  console.log(category); // useEffect(() => {\n  //     effect\n  //     return () => {\n  //         cleanup\n  //     }\n  // }, [input])\n\n  handleSubmit = e => {\n    e.preventDefault();\n    alert(JSON.stringify(e));\n    axios.post('http://localhost:8000/', {\n      username_artist: name,\n      artist_category: category\n    }).then(res => {\n      console.log(name, category);\n    }).catch(err => {});\n  }; // console.log(ref.fullname.value)\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        onSubmit: handleSubmit(),\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"username\",\n          label: \"Full name\",\n          ref: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"category\",\n          label: \"Category\",\n          ref: register,\n          onChange: e => setCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserDetails, \"+C/qFl8lYBO3hkWzunqnTtMwUOE=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = UserDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"sources":["/home/wanderer/Documents/hack-o-void/elysian/frontend/src/components/UserDetails.js"],"names":["React","useState","useEffect","makeStyles","TextField","Grid","Button","useForm","axios","useStyles","theme","root","margin","spacing","width","UserDetails","classes","register","handleSubmit","category","setCategory","name","setName","ref","createRef","console","log","e","preventDefault","alert","JSON","stringify","post","username_artist","artist_category","then","res","catch","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\nexport default function UserDetails() {\n    const classes = useStyles();\n    const { register, handleSubmit } = useForm();\n    const [category, setCategory] = useState();\n    const [name, setName] = useState();\n    const ref = React.createRef();\n    console.log(name)\n    console.log(category)\n\n    // useEffect(() => {\n    //     effect\n    //     return () => {\n    //         cleanup\n    //     }\n    // }, [input])\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        alert(JSON.stringify(e));\n        axios.post('http://localhost:8000/', {\n            username_artist: name,\n            artist_category: category,\n        })\n            .then((res) => {\n                console.log(name, category)\n            })\n            .catch((err) => { });\n    }\n\n    // console.log(ref.fullname.value)\n    return (\n        <Grid container direction=\"row\" justify=\"center\">\n            <Grid item >\n                <form className={classes.root} onSubmit={handleSubmit()}\n                    noValidate autoComplete=\"off\">\n                    <TextField name=\"username\" label=\"Full name\" ref={name} onChange={(e) => setName(e.target.value)} />\n                    <TextField name=\"category\" label=\"Category\" ref={register} onChange={(e) => setCategory(e.target.value)} />\n\n                    {/* <TextField name=\"email\" label=\"E-mail\" ref={register} onChange={(e) => setEmail(e.target.value)} />\n                    <TextField name=\"email\" label=\"E-mail\" ref={register} onChange={(e) => setEmail(e.target.value)} />\n                    <TextField name=\"email\" label=\"E-mail\" ref={register} onChange={(e) => setEmail(e.target.value)} />\n                    <TextField name=\"email\" label=\"E-mail\" ref={register} onChange={(e) => setEmail(e.target.value)} />\n                    <TextField name=\"email\" label=\"E-mail\" ref={register} onChange={(e) => setEmail(e.target.value)} />\n                     */}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Submit\n                    </Button>\n                </form>\n            </Grid>\n\n        </Grid>\n    );\n}"]},"metadata":{},"sourceType":"module"}